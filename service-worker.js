const CACHE_NAME = 'offline-BIOWORLD-V1.1';
const urlsToCache = [
  'index.html',
  'manifest.json',
  'icon-for-app.png',
  '123.html',
  'Forum.html',
  'Info.txt',
  'InfoCrator.html',
  'InfoUpdate.html',
  'Nots.html',
  'Profil.html',
  'QUZ.html',
  'Quz.html',
  'Test.html',
  'prizes.html',
  'offline.html'
];

// –ö–µ—à—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –ø—ñ–¥ —á–∞—Å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
self.addEventListener('install', event => {
  console.log('üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Service Worker...');
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then(cache => {
        console.log('‚úÖ –ö–µ—à—É—î–º–æ —Ñ–∞–π–ª–∏...');
        return cache.addAll(urlsToCache);
      })
      .then(() => self.skipWaiting()) // –æ–Ω–æ–≤–ª—é—î–º–æ –æ–¥—Ä–∞–∑—É
  );
});

// –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –∫–µ—à—ñ–≤
self.addEventListener('activate', event => {
  console.log('üßπ –ê–∫—Ç–∏–≤—É—î–º–æ Service Worker...');
  event.waitUntil(
    caches.keys().then(cacheNames =>
      Promise.all(
        cacheNames.map(name => {
          if (name !== CACHE_NAME) {
            console.log('üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–∏–π –∫–µ—à:', name);
            return caches.delete(name);
          }
        })
      )
    ).then(() => self.clients.claim())
  );
});

// –û–±—Ä–æ–±–∫–∞ –∑–∞–ø–∏—Ç—ñ–≤
self.addEventListener('fetch', event => {
  event.respondWith(
    fetch(event.request)
      .then(response => {
        return response; // –∑ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É
      })
      .catch(() => {
        return caches.match(event.request)
          .then(cached => cached || caches.match('offline.html')); // –æ—Ñ–ª–∞–π–Ω
      })
  );
});

// –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–ª—ñ—î–Ω—Ç–∞
self.addEventListener('message', event => {
  if (event.data === 'SKIP_WAITING') {
    self.skipWaiting(); // –º–∏—Ç—Ç—î–≤–æ –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –Ω–æ–≤—É –≤–µ—Ä—Å—ñ—é
  }
});
